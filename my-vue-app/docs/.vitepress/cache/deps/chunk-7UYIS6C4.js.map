{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/mermaid@10.9.0/node_modules/mermaid/dist/linear-d94cf28d.js"],
  "sourcesContent": ["import { $ as constant, a0 as interpolateNumber, a1 as color, a2 as interpolateRgb, a3 as interpolateString } from \"./mermaid-c5809711.js\";\nimport { i as initRange } from \"./init-cc95ec8e.js\";\nfunction ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\nfunction descending(a, b) {\n  return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\nfunction bisector(f) {\n  let compare1, compare2, delta;\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0)\n        return hi;\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) < 0)\n          lo = mid + 1;\n        else\n          hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0)\n        return hi;\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) <= 0)\n          lo = mid + 1;\n        else\n          hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n  return { left, center, right };\n}\nfunction zero() {\n  return 0;\n}\nfunction number$1(x) {\n  return x === null ? NaN : +x;\n}\nconst ascendingBisect = bisector(ascending);\nconst bisectRight = ascendingBisect.right;\nbisector(number$1).center;\nconst bisect = bisectRight;\nconst e10 = Math.sqrt(50), e5 = Math.sqrt(10), e2 = Math.sqrt(2);\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count), power = Math.floor(Math.log10(step)), error = step / Math.pow(10, power), factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start)\n      ++i1;\n    if (i2 / inc > stop)\n      --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start)\n      ++i1;\n    if (i2 * inc > stop)\n      --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2)\n    return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\nfunction ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0))\n    return [];\n  if (start === stop)\n    return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1))\n    return [];\n  const n = i2 - i1 + 1, ticks2 = new Array(n);\n  if (reverse) {\n    if (inc < 0)\n      for (let i = 0; i < n; ++i)\n        ticks2[i] = (i2 - i) / -inc;\n    else\n      for (let i = 0; i < n; ++i)\n        ticks2[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0)\n      for (let i = 0; i < n; ++i)\n        ticks2[i] = (i1 + i) / -inc;\n    else\n      for (let i = 0; i < n; ++i)\n        ticks2[i] = (i1 + i) * inc;\n  }\n  return ticks2;\n}\nfunction tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\nfunction tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\nfunction numberArray(a, b) {\n  if (!b)\n    b = [];\n  var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;\n  return function(t) {\n    for (i = 0; i < n; ++i)\n      c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\nfunction isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\nfunction genericArray(a, b) {\n  var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;\n  for (i = 0; i < na; ++i)\n    x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i)\n    c[i] = b[i];\n  return function(t) {\n    for (i = 0; i < na; ++i)\n      c[i] = x[i](t);\n    return c;\n  };\n}\nfunction date(a, b) {\n  var d = /* @__PURE__ */ new Date();\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\nfunction object(a, b) {\n  var i = {}, c = {}, k;\n  if (a === null || typeof a !== \"object\")\n    a = {};\n  if (b === null || typeof b !== \"object\")\n    b = {};\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n  return function(t) {\n    for (k in i)\n      c[k] = i[k](t);\n    return c;\n  };\n}\nfunction interpolate(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b) : (t === \"number\" ? interpolateNumber : t === \"string\" ? (c = color(b)) ? (b = c, interpolateRgb) : interpolateString : b instanceof color ? interpolateRgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object : interpolateNumber)(a, b);\n}\nfunction interpolateRound(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\nfunction formatDecimal(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n}\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0)\n    return null;\n  var i, coefficient = x.slice(0, i);\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\nfunction exponent(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length, t = [], j = 0, g = grouping[0], length = 0;\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width)\n        g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width)\n        break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n    return t.reverse().join(thousands);\n  };\n}\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier)))\n    throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\nformatSpecifier.prototype = FormatSpecifier.prototype;\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === void 0 ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === void 0 ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === void 0 ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === void 0 ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === void 0 ? void 0 : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === void 0 ? \"\" : specifier.type + \"\";\n}\nFormatSpecifier.prototype.toString = function() {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width === void 0 ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision === void 0 ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n};\nfunction formatTrim(s) {\n  out:\n    for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (s[i]) {\n        case \".\":\n          i0 = i1 = i;\n          break;\n        case \"0\":\n          if (i0 === 0)\n            i0 = i;\n          i1 = i;\n          break;\n        default:\n          if (!+s[i])\n            break out;\n          if (i0 > 0)\n            i0 = 0;\n          break;\n      }\n    }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\nvar prefixExponent;\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d)\n    return x + \"\";\n  var coefficient = d[0], exponent2 = d[1], i = exponent2 - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent2 / 3))) * 3) + 1, n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0];\n}\nfunction formatRounded(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d)\n    return x + \"\";\n  var coefficient = d[0], exponent2 = d[1];\n  return exponent2 < 0 ? \"0.\" + new Array(-exponent2).join(\"0\") + coefficient : coefficient.length > exponent2 + 1 ? coefficient.slice(0, exponent2 + 1) + \".\" + coefficient.slice(exponent2 + 1) : coefficient + new Array(exponent2 - coefficient.length + 2).join(\"0\");\n}\nconst formatTypes = {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\nfunction identity$1(x) {\n  return x;\n}\nvar map = Array.prototype.map, prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\nfunction formatLocale(locale2) {\n  var group = locale2.grouping === void 0 || locale2.thousands === void 0 ? identity$1 : formatGroup(map.call(locale2.grouping, Number), locale2.thousands + \"\"), currencyPrefix = locale2.currency === void 0 ? \"\" : locale2.currency[0] + \"\", currencySuffix = locale2.currency === void 0 ? \"\" : locale2.currency[1] + \"\", decimal = locale2.decimal === void 0 ? \".\" : locale2.decimal + \"\", numerals = locale2.numerals === void 0 ? identity$1 : formatNumerals(map.call(locale2.numerals, String)), percent = locale2.percent === void 0 ? \"%\" : locale2.percent + \"\", minus = locale2.minus === void 0 ? \"−\" : locale2.minus + \"\", nan = locale2.nan === void 0 ? \"NaN\" : locale2.nan + \"\";\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;\n    if (type === \"n\")\n      comma = true, type = \"g\";\n    else if (!formatTypes[type])\n      precision === void 0 && (precision = 12), trim = true, type = \"g\";\n    if (zero2 || fill === \"0\" && align === \"=\")\n      zero2 = true, fill = \"0\", align = \"=\";\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\", suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n    var formatType = formatTypes[type], maybeSuffix = /[defgprs%]/.test(type);\n    precision = precision === void 0 ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n    function format2(value) {\n      var valuePrefix = prefix, valueSuffix = suffix, i, n, c;\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n        var valueNegative = value < 0 || 1 / value < 0;\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n        if (trim)\n          value = formatTrim(value);\n        if (valueNegative && +value === 0 && sign !== \"+\")\n          valueNegative = false;\n        valuePrefix = (valueNegative ? sign === \"(\" ? sign : minus : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n      if (comma && !zero2)\n        value = group(value, Infinity);\n      var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n      if (comma && zero2)\n        value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n      switch (align) {\n        case \"<\":\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n        case \"=\":\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n        case \"^\":\n          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n          break;\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n      return numerals(value);\n    }\n    format2.toString = function() {\n      return specifier + \"\";\n    };\n    return format2;\n  }\n  function formatPrefix2(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];\n    return function(value2) {\n      return f(k * value2) + prefix;\n    };\n  }\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix2\n  };\n}\nvar locale;\nvar format;\nvar formatPrefix;\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\nfunction constants(x) {\n  return function() {\n    return x;\n  };\n}\nfunction number(x) {\n  return +x;\n}\nvar unit = [0, 1];\nfunction identity(x) {\n  return x;\n}\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function(x) {\n    return (x - a) / b;\n  } : constants(isNaN(b) ? NaN : 0.5);\n}\nfunction clamper(a, b) {\n  var t;\n  if (a > b)\n    t = a, a = b, b = t;\n  return function(x) {\n    return Math.max(a, Math.min(b, x));\n  };\n}\nfunction bimap(domain, range, interpolate2) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0)\n    d0 = normalize(d1, d0), r0 = interpolate2(r1, r0);\n  else\n    d0 = normalize(d0, d1), r0 = interpolate2(r0, r1);\n  return function(x) {\n    return r0(d0(x));\n  };\n}\nfunction polymap(domain, range, interpolate2) {\n  var j = Math.min(domain.length, range.length) - 1, d = new Array(j), r = new Array(j), i = -1;\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate2(range[i], range[i + 1]);\n  }\n  return function(x) {\n    var i2 = bisect(domain, x, 1, j) - 1;\n    return r[i2](d[i2](x));\n  };\n}\nfunction copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nfunction transformer() {\n  var domain = unit, range = unit, interpolate$1 = interpolate, transform, untransform, unknown, clamp = identity, piecewise, output, input;\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity)\n      clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate$1)))(transform(clamp(x)));\n  }\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate$1 = interpolateRound, rescale();\n  };\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$1 = _, rescale()) : interpolate$1;\n  };\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\nfunction continuous() {\n  return transformer()(identity, identity);\n}\nfunction tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count), precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value)))\n        specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop)))))\n        specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step)))\n        specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\nfunction linearish(scale) {\n  var domain = scale.domain;\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n  scale.nice = function(count) {\n    if (count == null)\n      count = 10;\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start;\n        d[i1] = stop;\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n    return scale;\n  };\n  return scale;\n}\nfunction linear() {\n  var scale = continuous();\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}\nexport {\n  copy as a,\n  bisector as b,\n  continuous as c,\n  linear as l,\n  tickStep as t\n};\n"],
  "mappings": "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",
  "names": []
}
